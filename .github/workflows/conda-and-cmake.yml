name: Build/Test CI

on: [push, pull_request]

jobs:
  build-windows:
    runs-on: windows-latest

    env:
      build-type: Release

    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.8
          channels: conda-forge
          channel-priority: true

      - name: Show conda installation info
        run: conda info

      - name: Install build tools and dependencies into env
        run: |
          conda install cxx-compiler fortran-compiler cmake bmi-fortran
          conda list

      - name: Activate conda env
        shell: cmd /C CALL {0}
        run: conda activate test

      - name: Make cmake build directory
        run: cmake -E make_directory build

      - name: Configure, build, and test
        shell: cmd /C CALL {0}
        working-directory: ${{ github.workspace }}\build
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat" -vcvars_ver=14.16 10.0.19041.0

          set "CONDA_PREFIX=C:\Miniconda\envs\test"
          set "LIB=C:\Miniconda\envs\test\Library\lib;%LIB%"
          set "INCLUDE=C:\Miniconda\envs\test\Library\include;%INCLUDE%"
          set CONDA_PREFIX
          set LIB
          set INCLUDE
          set LIBRARY_PATH

          if not exist C:/Miniconda/envs/test/Library/include/bmif_2_0.mod exit 1

          :: Configure
          cmake ^
            -LAH -G "NMake Makefiles" ^
            -DCMAKE_INSTALL_PREFIX:PATH=C:/Miniconda/envs/test/Library ^
            -DCMAKE_PREFIX_PATH:PATH=C:/Miniconda/envs/test/Library ^
            -DCMAKE_Fortran_MODULE_DIRECTORY:PATH=C:/Miniconda/envs/test/Library/include ^
            -DCMAKE_BUILD_TYPE=${{ env.build-type }} ^
            ..

          :: Build and install
          cmake --build . --target install --config ${{ env.build-type }}

          :: Test
          ctest --output-on-failure -C ${{ env.build-type }} -V
